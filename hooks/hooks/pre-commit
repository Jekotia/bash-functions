#! /bin/bash

function hook_shellcheck() {
	local file
	file="${1}" ; shift

	# if file is: a SH file in any location || any file under the hooks directory || any file under tests/functions/
	if [[ "${file}" =~ ^.*\.sh$ ]] || [[ "${file}" =~ ^hooks/ ]] || [[ "${file}" =~ ^tests/functions/ ]] ; then
		if shellcheck "${file}" > /dev/null 2>&1 ; then
			printf "\u2714 |"
			return 0
		else
			printf "\u274c|"
			return 1
		fi
	else
		printf "%s|" "SK"
	fi
}

function hook_tests() {
	local file
	file="${1}" ; shift

	if [[ "${file}" =~ ^functions/.*\.sh$ ]] ; then
		if [ -e "tests/${file}" ] ; then
			if "tests/${file}" > /dev/null 2>&1 ; then
				return 0
			else
				return 1
			fi
		else
			printf " MI |"
			return 1
		fi
	else
		printf " %s |" "SK"
	fi
}

printf "%s|%s| %-60s\n" "SC" "TEST" "File"
failures=0
while read -r file; do
	if ! hook_shellcheck "${file}" ; then
		((failures++))
	fi

	if ! hook_tests "${file}" ; then
		((failures++))
	fi

	printf " %s\n" "${file}"
done < <(git diff --cached --name-only --diff-filter=AM)

printf "\n\u2714 : Success   \u274c: Failure\n"
printf "SK: Skipped   MI: Missing\n"

if [[ $failures -gt 0 ]] ; then
	printf "\n%s\n\n%s\n\n" "Error: You attempted to commit one or more files with failures." "Please fix them and retry the commit."
	exit 1
fi
